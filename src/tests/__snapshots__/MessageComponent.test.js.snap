// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<MessageComponent/> snapshot 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div
    className="row message unread selected"
  >
    <div
      className="col-xs-1"
    >
      <div
        className="row"
      >
        <div
          className="col-xs-2"
        >
          <input
            checked={true}
            onClick={[Function]}
            type="checkbox"
          />
        </div>
        <div
          className="col-xs-2"
        >
          <i
            className="star fa fa-star"
            onClick={[Function]}
          />
        </div>
      </div>
    </div>
    <div
      className="col-xs-11"
      onClick={[Function]}
    >
      <span
        className="label label-warning"
      >
        dev
      </span>
      Use the 1080p HTTP feed, then you can parse the cross-platform hard drive!
    </div>
  </div>,
  "nodes": Array [
    <div
      className="row message unread selected"
    >
      <div
        className="col-xs-1"
      >
        <div
          className="row"
        >
          <div
            className="col-xs-2"
          >
            <input
              checked={true}
              onClick={[Function]}
              type="checkbox"
            />
          </div>
          <div
            className="col-xs-2"
          >
            <i
              className="star fa fa-star"
              onClick={[Function]}
            />
          </div>
        </div>
      </div>
      <div
        className="col-xs-11"
        onClick={[Function]}
      >
        <span
          className="label label-warning"
        >
          dev
        </span>
        Use the 1080p HTTP feed, then you can parse the cross-platform hard drive!
      </div>
    </div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 2,
      "_context": Object {},
      "_currentElement": <MessageComponent
        checked={true}
        message={
          Object {
            "id": 3,
            "labels": Array [
              "dev",
            ],
            "read": false,
            "starred": true,
            "subject": "Use the 1080p HTTP feed, then you can parse the cross-platform hard drive!",
          }
        }
        selected={true}
      />,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": StatelessComponent {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "checked": true,
          "message": Object {
            "id": 3,
            "labels": Array [
              "dev",
            ],
            "read": false,
            "starred": true,
            "subject": "Use the 1080p HTTP feed, then you can parse the cross-platform hard drive!",
          },
          "selected": true,
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div
          className="row message unread selected"
        >
          <div
            className="col-xs-1"
          >
            <div
              className="row"
            >
              <div
                className="col-xs-2"
              >
                <input
                  checked={true}
                  onClick={[Function]}
                  type="checkbox"
                />
              </div>
              <div
                className="col-xs-2"
              >
                <i
                  className="star fa fa-star"
                  onClick={[Function]}
                />
              </div>
            </div>
          </div>
          <div
            className="col-xs-11"
            onClick={[Function]}
          >
            <span
              className="label label-warning"
            >
              dev
            </span>
            Use the 1080p HTTP feed, then you can parse the cross-platform hard drive!
          </div>
        </div>,
        "_debugID": 2,
        "_renderedOutput": <div
          className="row message unread selected"
        >
          <div
            className="col-xs-1"
          >
            <div
              className="row"
            >
              <div
                className="col-xs-2"
              >
                <input
                  checked={true}
                  onClick={[Function]}
                  type="checkbox"
                />
              </div>
              <div
                className="col-xs-2"
              >
                <i
                  className="star fa fa-star"
                  onClick={[Function]}
                />
              </div>
            </div>
          </div>
          <div
            className="col-xs-11"
            onClick={[Function]}
          >
            <span
              className="label label-warning"
            >
              dev
            </span>
            Use the 1080p HTTP feed, then you can parse the cross-platform hard drive!
          </div>
        </div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <MessageComponent
    checked={true}
    message={
      Object {
        "id": 3,
        "labels": Array [
          "dev",
        ],
        "read": false,
        "starred": true,
        "subject": "Use the 1080p HTTP feed, then you can parse the cross-platform hard drive!",
      }
    }
    selected={true}
  />,
}
`;
